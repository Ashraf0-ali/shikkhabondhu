
import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Loader2, Plus } from 'lucide-react';
import { useSupabaseData } from '@/hooks/useSupabaseData';

const QuotesForm = () => {
  const { addMotivationalQuote } = useSupabaseData();
  
  const [quoteData, setQuoteData] = useState({
    quote: '',
    author: '',
    tags: ''
  });

  const handleSubmit = async (event: React.FormEvent) => {
    event.preventDefault();
    addMotivationalQuote.mutate(quoteData);
  };

  return (
    <Card className="bg-white/90 dark:bg-gray-800/80 backdrop-blur-xl border-white/30 shadow-xl">
      <CardHeader>
        <CardTitle className="bangla-text">üí≠ ‡¶â‡¶¶‡ßç‡¶¶‡ßÄ‡¶™‡¶®‡¶æ‡¶Æ‡ßÇ‡¶≤‡¶ï ‡¶â‡¶ï‡ßç‡¶§‡¶ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®</CardTitle>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit} className="space-y-4">
          <div className="space-y-2">
            <label className="text-sm font-medium bangla-text">‡¶â‡¶ï‡ßç‡¶§‡¶ø</label>
            <Textarea
              value={quoteData.quote}
              onChange={(e) => setQuoteData({...quoteData, quote: e.target.value})}
              placeholder="‡¶â‡¶ï‡ßç‡¶§‡¶ø ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®"
              className="bangla-text min-h-[100px]"
              required
            />
          </div>
          <div className="space-y-2">
            <label className="text-sm font-medium bangla-text">‡¶≤‡ßá‡¶ñ‡¶ï</label>
            <Input
              value={quoteData.author}
              onChange={(e) => setQuoteData({...quoteData, author: e.target.value})}
              placeholder="‡¶≤‡ßá‡¶ñ‡¶ï‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ"
              className="bangla-text"
            />
          </div>
          <div className="space-y-2">
            <label className="text-sm font-medium bangla-text">‡¶ü‡ßç‡¶Ø‡¶æ‡¶ó</label>
            <Input
              value={quoteData.tags}
              onChange={(e) => setQuoteData({...quoteData, tags: e.target.value})}
              placeholder="‡¶ü‡ßç‡¶Ø‡¶æ‡¶ó (‡¶ï‡¶Æ‡¶æ ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®)"
              className="bangla-text"
            />
          </div>
          <Button type="submit" className="w-full bangla-text" disabled={addMotivationalQuote.isPending}>
            {addMotivationalQuote.isPending ? (
              <>
                <Loader2 className="w-4 h-4 mr-2 animate-spin" />
                ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...
              </>
            ) : (
              <>
                <Plus className="w-4 h-4 mr-2" />
                ‡¶â‡¶ï‡ßç‡¶§‡¶ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
              </>
            )}
          </Button>
        </form>
      </CardContent>
    </Card>
  );
};

export default QuotesForm;
