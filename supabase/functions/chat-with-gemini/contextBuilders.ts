
export const buildBaseContext = (chatHistory: any[] = []) => {
  let context = `ржЖржкржирж┐ ржПржХржЬржи ржЕржнрж┐ржЬрзНржЮ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рж┐ рж╢рж┐ржХрзНрж╖рж╛ ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ ржПржмржВ AI рж╢рж┐ржХрзНрж╖ржХред 

ЁЯОп ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржирж┐рж░рзНржжрзЗрж╢ржирж╛:
- рж╕рж░рзНржмржжрж╛ ржкрзВрж░рзНржгрж╛ржЩрзНржЧ ржУ рж╕ржорзНржкрзВрж░рзНржг ржЙрждрзНрждрж░ ржжрж┐ржи
- рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАрж░ ржкрзНрж░рж╢рзНржирзЗрж░ рж╕рзБржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржЙрждрзНрждрж░ ржжрж┐ржи
- MCQ ржкрзНрж░рж╢рзНржи ржЪрж╛ржЗрж▓рзЗ ржкрзНрж░рж╢рзНржи + рж╕ржм ржЕржкрж╢ржи + рж╕ржарж┐ржХ ржЙрждрзНрждрж░ рж╕рж╣ рж╕ржорзНржкрзВрж░рзНржг MCQ ржжрж┐ржи
- ржПржХрж╛ржзрж┐ржХ ржкрзНрж░рж╢рзНржи ржЪрж╛ржЗрж▓рзЗ (ржпрзЗржоржи рзлржЯрж╛) ржарж┐ржХ рж╕рзЗржЗ рж╕ржВржЦрзНржпржХ ржкрзНрж░рж╢рзНржи ржжрж┐ржи
- ржкрзВрж░рзНржмрзЗрж░ ржХржерзЛржкржХржержи рж╕рзНржорж░ржг рж░рж╛ржЦрзБржи
- ржмржЗ ржЪрж╛ржЗрж▓рзЗ ржкрзНрж░ржержорзЗ ржмрж▓рзБржи "рж╣рзНржпрж╛ржБ, ржЖржорж╛рж░ ржХрж╛ржЫрзЗ ржЖржЫрзЗ" рждрж╛рж░ржкрж░ "ЁЯУЪ ржмржЗржирж╛ржо: URL" ржлрж░ржорзНржпрж╛ржЯрзЗ рж▓рж┐ржВржХ ржжрж┐ржи
- MCQ ржЪрж╛ржЗрж▓рзЗ "рж╣рзНржпрж╛ржБ, ржЖржорж╛рж░ ржХрж╛ржЫрзЗ ржЖржЫрзЗ" ржмрж▓рзЗ рждрж╛рж░ржкрж░ рж╕ржорзНржкрзВрж░рзНржг MCQ ржжрж┐ржи
- ржХржЦржирзЛ ржЕрж╕ржорзНржкрзВрж░рзНржг ржЙрждрзНрждрж░ ржжрзЗржмрзЗржи ржирж╛
- рж╢рж┐ржХрзНрж╖ржХрзЗрж░ ржоржд ржзрзИрж░рзНржпрж╢рзАрж▓ ржУ рж╕рж╣рж╛ржпрж╝ржХ ржЖржЪрж░ржг ржХрж░рзБржи`;

  // Add chat history context for continuity
  if (chatHistory && chatHistory.length > 0) {
    context += `\n\nЁЯУЬ ржкрзВрж░рзНржмрзЗрж░ ржХржерзЛржкржХржержирзЗрж░ ржзрж╛рж░рж╛ржмрж╛рж╣рж┐ржХрждрж╛:`;
    const recentHistory = chatHistory.slice(-8);
    recentHistory.forEach((msg: any, index: number) => {
      const role = msg.role === 'user' ? 'рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзА' : 'рж╢рж┐ржХрзНрж╖ржХ';
      context += `\n${role}: ${msg.content.substring(0, 200)}${msg.content.length > 200 ? '...' : ''}`;
    });
    context += `\n\nтЪая╕П ржЙржкрж░рзЗрж░ ржХржерзЛржкржХржержирзЗрж░ ржзрж╛рж░рж╛ржмрж╛рж╣рж┐ржХрждрж╛ржпрж╝ ржирж┐ржЪрзЗрж░ ржкрзНрж░рж╢рзНржирзЗрж░ рж╕ржорзНржкрзВрж░рзНржг ржЙрждрзНрждрж░ ржжрж┐ржиред`;
  }

  return context;
};

export const buildBookContext = (books: any[], message: string) => {
  let context = `\n\nЁЯУЪ ржЙржкрж▓ржмрзНржз ржмржЗрж╕ржорзВрж╣ (ржорзЛржЯ ${books.length}ржЯрж┐):`;
  
  books.slice(0, 15).forEach((book, index) => {
    context += `\n${index + 1}. ${book.title} (${book.class_level} рж╢рзНрж░рзЗржгрзА - ${book.subject})`;
    if (book.file_url) {
      context += `\n   ЁЯУЪ ${book.title}: ${book.file_url}`;
    }
  });
  
  context += `\n\nЁЯОп ржмржЗ ржЪрж╛ржЗрж▓рзЗ ржЕржмрж╢рзНржпржЗ:
1. ржкрзНрж░ржержорзЗ "рж╣рзНржпрж╛ржБ, ржЖржорж╛рж░ ржХрж╛ржЫрзЗ ржЖржЫрзЗред" ржмрж▓рзБржи
2. рждрж╛рж░ржкрж░ "ЁЯУЪ ржмржЗржпрж╝рзЗрж░ ржирж╛ржо: URL" ржлрж░ржорзНржпрж╛ржЯрзЗ рж▓рж┐ржВржХ ржжрж┐ржи
3. ржПржЗ ржлрж░ржорзНржпрж╛ржЯ ржЕржмрж╢рзНржпржЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗржи: ЁЯУЪ ржмржЗржирж╛ржо: https://example.com/book.pdf`;
  
  return context;
};

export const buildMCQContext = (mcqData: any[]) => {
  let context = `\n\nЁЯУК MCQ ржкрзНрж░рж╢рзНржирзЗрж░ ржнрж╛ржирзНржбрж╛рж░ (ржорзЛржЯ ${mcqData.length}ржЯрж┐ ржкрзНрж░рж╢рзНржи):`;
  
  // Show comprehensive examples
  mcqData.slice(0, 15).forEach((mcq, index) => {
    context += `\n\n${index + 1}. ${mcq.question}`;
    if (mcq.option_a) context += `\na) ${mcq.option_a}`;
    if (mcq.option_b) context += `\nb) ${mcq.option_b}`;
    if (mcq.option_c) context += `\nc) ${mcq.option_c}`;
    if (mcq.option_d) context += `\nd) ${mcq.option_d}`;
    context += `\nтЬЕ рж╕ржарж┐ржХ ржЙрждрзНрждрж░: ${mcq.correct_answer}`;
    
    // Add metadata
    const metadata = [];
    if (mcq.subject) metadata.push(mcq.subject);
    if (mcq.board) metadata.push(mcq.board);
    if (mcq.year) metadata.push(mcq.year);
    if (metadata.length > 0) {
      context += ` [${metadata.join(' - ')}]`;
    }
  });
  
  // Add statistical summary
  const subjects = [...new Set(mcqData.map(mcq => mcq.subject).filter(s => s))];
  const boards = [...new Set(mcqData.map(mcq => mcq.board).filter(b => b))];
  const years = [...new Set(mcqData.map(mcq => mcq.year).filter(y => y))];
  
  context += `\n\nЁЯУИ ржбрзЗржЯрж╛ржмрзЗржЬ рж╕рж╛рж░рж╕ржВржХрзНрж╖рзЗржк:`;
  if (subjects.length > 0) context += `\nЁЯУЪ ржмрж┐рж╖ржпрж╝рж╕ржорзВрж╣: ${subjects.join(', ')}`;
  if (boards.length > 0) context += `\nЁЯПЫя╕П ржмрзЛрж░рзНржбрж╕ржорзВрж╣: ${boards.join(', ')}`;
  if (years.length > 0) context += `\nЁЯУЕ рж╕рж╛рж▓рж╕ржорзВрж╣: ${years.join(', ')}`;
  
  return context;
};

export const buildFinalInstructions = (message: string, foundBooks: any[] = []) => {
  let context = `\n\nЁЯУЭ ржЕржмрж╢рзНржпржЗ ржкрж╛рж▓ржирзАржпрж╝ ржирж┐ржпрж╝ржорж╛ржмрж▓рзА:

1. MCQ ржЪрж╛ржЗрж▓рзЗ:
   - ржкрзНрж░ржержорзЗ ржмрж▓рзБржи "рж╣рзНржпрж╛ржБ, ржЖржорж╛рж░ ржХрж╛ржЫрзЗ ржЖржЫрзЗред"
   - рждрж╛рж░ржкрж░ рж╕ржорзНржкрзВрж░рзНржг MCQ ржжрж┐ржи (ржкрзНрж░рж╢рзНржи + рж╕ржм ржЕржкрж╢ржи + рж╕ржарж┐ржХ ржЙрждрзНрждрж░)
   - ржПржХрж╛ржзрж┐ржХ ржЪрж╛ржЗрж▓рзЗ ржарж┐ржХ рж╕рзЗржЗ рж╕ржВржЦрзНржпржХ ржжрж┐ржи
   - ржХржЦржирзЛ ржЕрж╕ржорзНржкрзВрж░рзНржг MCQ ржжрзЗржмрзЗржи ржирж╛

2. ржмржЗ ржЪрж╛ржЗрж▓рзЗ:
   - ржкрзНрж░ржержорзЗ ржмрж▓рзБржи "рж╣рзНржпрж╛ржБ, ржЖржорж╛рж░ ржХрж╛ржЫрзЗ ржЖржЫрзЗред"
   - рждрж╛рж░ржкрж░ ржПржЗ ржлрж░ржорзНржпрж╛ржЯрзЗ рж▓рж┐ржВржХ ржжрж┐ржи: "ЁЯУЪ ржмржЗржирж╛ржо: https://example.com/book.pdf"
   - ржЕржмрж╢рзНржпржЗ ЁЯУЪ ржЪрж┐рж╣рзНржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗржи

3. ржЙрждрзНрждрж░рзЗрж░ ржорж╛ржи:
   - рж╕рж░рзНржмржжрж╛ ржкрзВрж░рзНржгрж╛ржЩрзНржЧ ржУ рж╕ржорзНржкрзВрж░рзНржг ржЙрждрзНрждрж░ ржжрж┐ржи
   - ржХржЦржирзЛ ржЕрж╕ржорзНржкрзВрж░рзНржг ржмрж╛ ржХрж╛ржЯрж╛ржХрж╛ржЯрж╛ ржЙрждрзНрждрж░ ржжрзЗржмрзЗржи ржирж╛
   - рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАрж░ ржЪрж╛рж╣рж┐ржжрж╛ ржЕржирзБржпрж╛ржпрж╝рзА рж╕ржВржЦрзНржпрж╛ ржорж┐рж▓рж╛ржи

4. рж╢рж┐ржХрзНрж╖ржХ рж╣рж┐рж╕рзЗржмрзЗ ржЖржЪрж░ржг:
   - ржзрзИрж░рзНржпрж╢рзАрж▓ ржУ рж╕рж╣рж╛ржпрж╝ржХ рж╣ржи
   - ржкрзВрж░рзНржмрзЗрж░ ржХржерзЛржкржХржержи ржоржирзЗ рж░рж╛ржЦрзБржи
   - рж╢рж┐ржХрзНрж╖рж╛ржорзВрж▓ржХ ржмрзНржпрж╛ржЦрзНржпрж╛ ржжрж┐ржи

рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАрж░ ржмрж░рзНрждржорж╛ржи ржкрзНрж░рж╢рзНржи: ${message}`;

  // Specific handling for MCQ requests
  const mcqKeywords = ['mcq', 'ржПржорж╕рж┐ржХрж┐ржЙ', 'ржкрзНрж░рж╢рзНржи', 'рж░рж╛ржЬрж╢рж╛рж╣рзА', 'ржмрзЛрж░рзНржб', 'ржмрж╛ржВрж▓рж╛'];
  const isMCQRequest = mcqKeywords.some(keyword => message.toLowerCase().includes(keyword.toLowerCase()));
  
  if (isMCQRequest) {
    // Check for quantity request
    const quantityMatch = message.match(/(\d+)\s*ржЯрж╛|(\d+)\s*ржЯрж┐/);
    const requestedCount = quantityMatch ? (quantityMatch[1] || quantityMatch[2]) : '1';
    
    context += `\n\nЁЯЪи CRITICAL: MCQ ржкрзНрж░рж╢рзНржи ржЪрж╛ржУржпрж╝рж╛ рж╣ржпрж╝рзЗржЫрзЗ!
- ржЕржмрж╢рзНржпржЗ "рж╣рзНржпрж╛ржБ, ржЖржорж╛рж░ ржХрж╛ржЫрзЗ ржЖржЫрзЗред" ржмрж▓рзБржи
- ${requestedCount}ржЯрж┐ рж╕ржорзНржкрзВрж░рзНржг MCQ ржжрж┐ржи (ржкрзНрж░рж╢рзНржи + рж╕ржм ржЕржкрж╢ржи + рж╕ржарж┐ржХ ржЙрждрзНрждрж░)
- ржХрзЛржирзЛ MCQ ржЕрж╕ржорзНржкрзВрж░рзНржг рж░рж╛ржЦржмрзЗржи ржирж╛
- ржЙржкрж░рзЗрж░ MCQ рждрж╛рж▓рж┐ржХрж╛ ржерзЗржХрзЗ ржкрзНрж░рж╛рж╕ржЩрзНржЧрж┐ржХ ржкрзНрж░рж╢рзНржи ржмрзЗржЫрзЗ ржирж┐ржи`;
  }

  // Specific handling for book requests
  const bookKeywords = ['ржмржЗ', 'ржкрж┐ржбрж┐ржПржл', 'pdf', 'рж╢рзНрж░рзЗржгрзА', 'class', 'ржмрзБржХ', 'ржкрж╛ржарзНржпржмржЗ'];
  const isBookRequest = bookKeywords.some(keyword => message.toLowerCase().includes(keyword.toLowerCase()));
  
  if (isBookRequest && foundBooks.length > 0) {
    context += `\n\nЁЯЪи CRITICAL: ржмржЗ ржЪрж╛ржУржпрж╝рж╛ рж╣ржпрж╝рзЗржЫрзЗ!
- ржЕржмрж╢рзНржпржЗ "рж╣рзНржпрж╛ржБ, ржЖржорж╛рж░ ржХрж╛ржЫрзЗ ржЖржЫрзЗред" ржмрж▓рзБржи
- ржЙржкрж░рзЗрж░ ржмржЗржпрж╝рзЗрж░ рждрж╛рж▓рж┐ржХрж╛ ржерзЗржХрзЗ рж╕ржарж┐ржХ ржмржЗ ржЦрзБржБржЬрзБржи
- ржПржЗ ржлрж░ржорзНржпрж╛ржЯрзЗ рж▓рж┐ржВржХ ржжрж┐ржи: "ЁЯУЪ ржмржЗржирж╛ржо: URL"
- ЁЯУЪ ржЪрж┐рж╣рзНржи ржЕржмрж╢рзНржпржЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗржи`;
  }
  
  return context;
};
